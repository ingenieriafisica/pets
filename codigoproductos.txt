
export interface ProductosInterface {
  title: String;
  description: String;
  price: Number;
  image: String;
  category: String;
}

export class Productos implements ProductosInterface {
  constructor(
    public title: String,
    public description: String,
    public price: Number,
    public image: String,
    public category: String
  ) {}
}

—--
<h3>Productos</h3>
<div class="row justify-content-center mb-3">
    <div class="col-md-12 col-xl-10">
        <div class="card shadow-0 border rounded-3" *ngFor="let product of productos">
            <div class="card-body">
                <div class="row">
                    <div class="col-md-12 col-lg-3 col-xl-3 mb-4 mb-lg-0">
                        <div class="bg-image hover-zoom ripple rounded ripple-surface">
                            <img src="{{product.image}}" class="w-100" />
                            <a href="#!">
                                <div class="hover-overlay">
                                    <div class="mask" style="background-color: rgba(253, 253, 253, 0.15);">
                                    </div>
                                </div>
                            </a>
                        </div>
                    </div>
                    <div class="col-md-6 col-lg-6 col-xl-6">
                        <h4>{{product.title}}</h4>
                        <div class="d-flex flex-row">
                            <strong> {{product.category}}
                            </strong>

                        </div>

                        <p class="text mb-4 mb-md-0">
                            {{product.description}}
                        </p>
                    </div>
                    <div class="col-md-6 col-lg-3 col-xl-3 border-sm-start-none border-start">
                        <div class="d-flex flex-row align-items-center mb-1">
                            <h4 class="mb-1 me-1">{{product.price}}</h4>
                            <span class="text-danger"><s>{{+product.price * +product.price*0.05 |
                                    number:'1.0-2'}}</s></span>
                        </div>
                        <h6 class="text-success">Envío gratis</h6>
                        <div class="d-flex flex-column mt-4">
                            <button class="btn btn-primary btn-sm" type="button">Details</button>
                            <button class="btn btn-outline-primary btn-sm mt-2" type="button">
                                Add to wishlist
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


—------------------

import { Component, OnInit } from '@angular/core';
import { ProductsService } from './products.service';
import { Productos } from './productos';


@Component({
  selector: 'app-products',
  templateUrl: './products.component.html',
  styleUrls: ['./products.component.css'],
})
export class ProductsComponent implements OnInit {
  productos: Productos[] = [];

  constructor(private productsService: ProductsService) { }

  ngOnInit(): void {
    this.loadProducts();
  }

  loadProducts(): void {
    this.productsService.getProducts().subscribe((response: any) => {
      this.productos = response;
      console.log(this.productos);
    });
  }

  loadProduct(id: string): void {
    this.productsService.getProduct(id).subscribe((response: any) => {
      this.productos = response;
      console.log(this.productos);
    });
  }
}

—-----

import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { ProductsRoutingModule } from './products-routing.module';
import { ProductsComponent } from './products.component';
import { ProductsService } from './products.service';

@NgModule({
  declarations: [ProductsComponent],
  imports: [CommonModule, ProductsRoutingModule],
  providers: [ProductsService],
})
export class ProductsModule {}

—------

import { Injectable } from '@angular/core';
import { HttpClient, HttpErrorResponse } from '@angular/common/http';
import { Observable, catchError } from 'rxjs';
import { Productos } from './productos';

const endpoint = 'https://fakestoreapi.com/';

@Injectable({
  providedIn: 'root',
})
export class ProductsService {
 
productos: Productos[] = [];

  constructor(private httpClient: HttpClient) {}

  getProducts(): Observable<any> {
    return this.httpClient
      .get<Productos>(endpoint + 'products')
      .pipe(catchError(this.handleError));
  }

  getProduct(id: string): Observable<any> {
    return this.httpClient
      .get<Productos>(endpoint + 'products/' + id)
      .pipe(catchError(this.handleError));
  }

  deleteProduct(id: string): Observable<any> {
    return this.httpClient
      .delete<Productos>(endpoint + 'products/' + id)
      .pipe(catchError(this.handleError));
  }

  private handleError(error: HttpErrorResponse): any {
    if (error.error instanceof ErrorEvent) {
      console.error('An error occurred:', error.error.message);
    } else {
      console.error(
        `Backend returned code ${error.status}, ` + `body was: ${error.error}`
      );
    }
    return console.log('Something bad happened; please try again later.');
  }
}



